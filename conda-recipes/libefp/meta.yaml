{% set version = "1.4.2" %}

{% set mklver = "2017.0.3" %}
{% set defisa = "avx2" %}
{% set isa = environ.get("PSI_BUILD_ISA", defisa) %}


package:
  name: libefp
  version: {{ version }}

source:
  git_url: git@github.com:ilyak/libefp.git             # [linux]
  git_url: https://github.com/ilyak/libefp.git         # [osx]
  git_tag: {{ version }}

build:
  number: 1                                            # [linux]
  number: 1                                            # [osx]
  binary_relocation: true
  skip: true                                           # [win]
  script_env:
    - PSI_BUILD_ISA                                    # [osx]
  {% if isa != defisa %}
  features:
    - {{ isa }}                                        # [osx]
  {% endif %}

requirements:
  build:
    - cmake >=3.0
    - gcc-5-mp         # [linux]
    - mkl {{ mklver }} # [osx]
    {% if isa != defisa %}
    - {{ isa }}        # [osx]    # for oldmac selection
    {% endif %}
#    - gcc              # [osx]    # build w/conda gcc
    - mkl {{ mklver }} # [linux]
  run:
    - mkl {{ mklver }}            # link mkl_rt. L: link libiomp5
    {% if isa != defisa %}
    - {{ isa }}        # [osx]    # track oldmac
    {% endif %}
#    - gcc-5-mp         # [linux]  # link libgcc_s don't include at rt b/c interferes with using other gcc. can usually count on a libgcc_s to link to somewhere
#    - libgcc           # [osx]    # link libgcc_s

test:
  commands:
    # Verify library
    - test -f $PREFIX/lib/libefp$SHLIB_EXT
    # Inspect linkage
    - ldd -r -u $PREFIX/lib/libefp.so && return 0  # [linux]
    - ldd -v $PREFIX/lib/libefp.so                 # [linux]
    - otool -L $PREFIX/lib/libefp.dylib            # [osx]
    - conda-inspect linkages libefp --show-files

#about:
#  home: https://github.com/ilyak/libefp
#  license: BSD 2-clause
#  summary: "parallel implementation of the Effective Fragment Potential (EFP) method"
#  readme: README.md

about:
  home: https://github.com/ilyak/libefp
  dev_url: https://github.com/ilyak/libefp/blob/master/README.md
  doc_url: https://libefp.github.io/
  license: BSD-2-Clause
  license_url: https://opensource.org/licenses/BSD-2-Clause
  license_file: LICENSE
  summary: I. Kaliman's parallel implementation of the Effective Fragment Potential (EFP) method
  description: some stuff
  license_family: BSD

