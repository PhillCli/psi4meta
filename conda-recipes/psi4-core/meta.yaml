
{% set data = load_setup_py_data(setup_file='conda/_conda_vers.py') %}

package:
  name: psi4
  version: {{ data.get('version') }}

source:
  git_url: git@github.com:psi4/psi4.git                # [linux]
  git_url: https://github.com/psi4/psi4.git            # [osx]
  git_tag: master

build:
  skip: true                                           # [win]
  number: 0
  binary_relocation: true

requirements:
  build:
    # non-qc
    - cmake >3.3       # [osx]
    - gcc             # [osx]  # after working for gfortran
    - numpy            # [osx]  # for psi4 execution w/i ctest and sphinxman
    - python x.x       # [osx]
    # qc
    - chemps2          # [osx]
    - dftd3            # [osx]  # for testing
    - libefp           # [osx]
    - erd              # [osx]
    - gdma             # [osx]
    - libint           # [osx]
    - pcmsolver        # [osx]
    # non-qc
    - cmake >3.3       # [linux]
    - gcc-5-mp         # [linux]
    - numpy            # [linux]  # for psi4 execution w/i ctest and sphinxman
    - python x.x       # [linux]
    # qc
    - chemps2          # [linux]
    - dftd3            # [linux]  # for testing
    - libefp           # [linux]
    - erd              # [linux]
    - gdma             # [linux]
    - libint           # [linux]
    - pcmsolver        # [linux]
    # docs
    - docutils 0.12*   # [linux]  # for docs (verno avoids sphinx bug)
    - ipykernel        # [linux]  # for psiapi docs
    - jupyter_client   # [linux]  # for psiapi docs
    - nbsphinx         # [linux]  # for psiapi docs
    - pandoc 1.19*     # [linux]  # for psiapi docs (verno forces conda-forge that gets headers right)
    - sphinx 1.5*      # [linux]  # for docs
  run:
    # non-qc
    - libgcc           # [osx]  # after working for libgfortran
    - numpy            # [osx]
    - python x.x       # [osx]  # interpreter python
    # qc
    - chemps2          # [osx]  # link libchemps2
    - libefp           # [osx]  # link libefp
    - erd              # [osx]  # link liberd
    - gdma             # [osx]  # link libgdma
    - libint           # [osx]  # link libderiv, libint
    - pcmsolver        # [osx]  # link libpcm
    # non-qc
    - gcc-5-mp         # [linux]  # link libgcc_s
    - mkl              # [linux]  # link libiomp5
    - numpy            # [linux]
    - python x.x       # [linux]  # interpreter python
    # qc
    - chemps2          # [linux]  # link libchemps2
    - libefp           # [linux]  # link libefp
    - erd              # [linux]  # link liberd
    - gdma             # [linux]  # link libgdma
    - libint           # [linux]  # link libderiv, libint
    - pcmsolver        # [linux]  # link libpcm

    #- mpc 1.0.1        # [linux]  # "
    #- mpfr 3.1.2       # [linux]  # "
##    - pcmsolver >=1.1.2           # link libpcm
##    - pychemps2 >=1.7.1           # link libchemps2

test:
  requires:
    - pytest
    - dftd3
    - gcp
    #- v2rdm_casscf
  commands:
    # Verify existence and execution
    - test -f $PREFIX/bin/psi4
    - test -f $SP_DIR/psi4/core.so
    - $PREFIX/bin/psi4 --version
    # Inspect linkage
    - ldd -r -u $SP_DIR/psi4/core.so  # [linux]
    - ldd -v $SP_DIR/psi4/core.so     # [linux]
    - otool -L $SP_DIR/psi4/core.so   # [osx]
    - conda-inspect linkages --show-files --groupby=dependency chemps2 libefp erd gdma libint pcmsolver psi4
    # Actually test
    - conda list
    - python -c "import psi4; psi4.test(); print('*** Psi4 {} built successfully. Buy psinet a beer!'.format(psi4.__version__))"

about:
  home: http://www.psicode.org
  license: GNU General Public License v2 or later (GPLv2+)
  #license_file: LICENSE
  summary: "open-source quantum chemistry"
  #readme: README.md

# to conda build package from local source rather than github, substitute like below
#package/version: 0.1.6
#source/path: ../../../hrw-conda
#build/number: 1
#build/string: abc
